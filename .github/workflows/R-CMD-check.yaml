# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v1

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Install R dependencies
        run: |
          cat("::group::Install pak\n")
          options(pak.no_extra_messages = TRUE)
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/stable/")
          cat("::endgroup::\n")
          cat("::group::Install premiumPlots\n")
          pak::pkg_install("simisc/premiumPlots")
          cat("::endgroup::\n")
          cat("::group::Install pkgdepends\n")
          pak::pkg_install("pkgdepends")
          cat("::endgroup::\n")
          cat("::group::Install PReMiuMlongi dependencies\n")
          deps <- pkgdepends::new_pkg_deps("local::.")$resolve()
          deps2install <- deps$get_resolution()[["ref"]]
          deps2install <- deps2install[-grep("premiumPlots", deps2install)]
          pak::pkg_install(c(deps2install, "rcmdcheck", "sessioninfo"))
          cat("::endgroup::\n")
        shell: Rscript {0}

      - uses: r-lib/actions/check-r-package@v1

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
